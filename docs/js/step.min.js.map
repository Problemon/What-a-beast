{"version":3,"sources":["step.js"],"names":["DATA","showEndGame","backToElections","addClassHidden","removeClassHidden","hideOptions","buttonNext","document","querySelector","buttonBack","indexStep","renderStepAnswer","image","indexImage","numbers","isRounded","renderStepAnswers","dataStep","images","map","join","renderStep","title","renderStepsOfLevel","levelIndex","STEPS","number","steps","level","rightAnswers","givenRightAnswers","getCurrentStep","this","querySelectorAll","getDataOfAnswer","element","closest","src","currentStep","textContent","checkAnswer","givenAnswerOfStep","stepList","Number","value","dataOfAnswer","push","onStepListChange","classList","remove","hideCurrentStep","checked","add","showCurrentStep","addEventListener","once","onButtonNextClick","length","onButtonBackClick"],"mappings":"OAASA,SAAY,uBACZC,gBAAmB,sBACnBC,oBAAuB,4BACvBC,eAAgBC,sBAAyB,uBACzCC,gBAAmB,mBAE5B,MAAMC,WAAaC,SAASC,cAAc,0BACpCC,WAAaF,SAASC,cAAc,0BAE1C,IAAIE,UAAY,EAEhB,MAAMC,iBAAmB,CAACC,EAAOC,EAAYC,EAASC,IAAc,sGAECF,EAAa,YAAYC,EAAQ,MAAMA,EAAQ,wDAElFF,wBAA4BA,iDAC9BG,EAAY,uBAAyB,sBAAsBH,4BAAgCA,0IAMrHI,kBAAoB,CAACC,EAAUH,KACnC,MAAMI,OAACA,EAAMH,UAAEA,GAAaE,EAG5B,MAAO,8CAFeC,EAAOC,KAAI,CAACP,EAAOC,IAAeF,iBAAiBC,EAAOC,EAAYC,EAASC,KAIjFK,KAAK,8BAKrBC,WAAa,CAACJ,EAAUH,KAC5B,MAAMQ,MAACA,GAASL,EAEhB,MAAO,wKAG2CK,oCAE1CN,kBAAkBC,EAAUH,qBAKhCS,mBAAsBC,GACLxB,KAAKyB,MAAMD,GACZL,KAAI,CAACF,EAAUS,IAAWL,WAAWJ,EAAU,CAACO,EAAYE,MAG5EC,MAAQ,CACZC,MAAO,KACPC,aAAc,KACdC,kBAAmB,KAEnBC,iBAEE,OADAC,KAAKL,MAAQK,KAAKJ,MAAMK,iBAAiB,SAClCD,KAAKL,MAAMjB,YAGpBwB,gBAAgBC,GASd,MALmB,CACjBvB,MAJeuB,EAAQC,QAAQ,eACC5B,cAAc,gBAAgB6B,IAI9Df,MAHoBU,KAAKM,YAAY9B,cAAc,gBAAgB+B,cASvEC,cACER,KAAKS,kBAAoBT,KAAKU,SAASlC,cAAc,iBAIrD,GAH0BwB,KAAKH,aAAanB,aACbiC,OAAOX,KAAKS,kBAAkBG,OAEX,CAChD,MAAMC,EAAeb,KAAKE,gBAAgBF,KAAKS,mBAC/CT,KAAKF,kBAAkBgB,KAAKD,KAIhCE,mBACEzC,WAAW0C,UAAUC,OAAO,mBAG9BC,kBACE/C,eAAe6B,KAAKM,aACpBN,KAAKS,kBAAkBU,SAAU,EACjC7C,WAAW0C,UAAUI,IAAI,mBAG3BC,kBACErB,KAAKM,YAAcN,KAAKD,iBACxBC,KAAKU,SAAWV,KAAKM,YAAY9B,cAAc,eAE/CJ,kBAAkB4B,KAAKM,aACvBN,KAAKU,SAASY,iBAAiB,UAAU,IAAMtB,KAAKe,oBAAoB,CAACQ,MAAM,MAI7EC,kBAAoB,KACxB7B,MAAMa,cAEF9B,YAAciB,MAAMA,MAAM8B,OAAS,GACrCpD,cACAsB,MAAMuB,kBACNjD,YAAY0B,MAAMG,mBAClBpB,UAAY,IAEZiB,MAAMuB,kBACNxC,WAAa,EACbiB,MAAM0B,oBAIJK,kBAAoB,KACN,IAAdhD,UACFR,gBAAgByB,MAAMC,QAEtBD,MAAMuB,kBACNxC,WAAa,EACbiB,MAAM0B,oBAIV5C,WAAW6C,iBAAiB,SAAS,KATjB,IAAd5C,UACFR,gBAAgByB,MAAMC,QAEtBD,MAAMuB,kBACNxC,WAAa,EACbiB,MAAM0B,sBAKV/C,WAAWgD,iBAAiB,SAAS,KAzBnC3B,MAAMa,mBAEF9B,YAAciB,MAAMA,MAAM8B,OAAS,GACrCpD,cACAsB,MAAMuB,kBACNjD,YAAY0B,MAAMG,mBAClBpB,UAAY,IAEZiB,MAAMuB,kBACNxC,WAAa,EACbiB,MAAM0B,8BAiBF1B,MAAOJ","file":"step.min.js","sourcesContent":["import { DATA } from './data.min.js';\nimport { showEndGame } from './end.min.js';\nimport { backToElections } from './elections.min.js';\nimport { addClassHidden, removeClassHidden } from './util.min.js';\nimport { hideOptions } from './options.min.js';\n\nconst buttonNext = document.querySelector('.options__button--next');\nconst buttonBack = document.querySelector('.options__button--back');\n\nlet indexStep = 0;\n\nconst renderStepAnswer = (image, indexImage, numbers, isRounded) => (`\n  <label class=\"step__item\">\n    <input class=\"step__radio visually-hidden\" type=\"radio\" value=\"${indexImage + 1}\" name=\"${numbers[0]}-${numbers[1]}\">\n    <picture>\n      <source srcset=\"img/items/${image}.webp 1x, img/items/${image}@2x.webp 2x\">\n      <img class=\"step__image ${isRounded ? 'step__image--rounded' : ''}\" src=\"img/items/${image}.png\" srcset=\"img/items/${image}@2x.png 2x\" width=\"300\" height=\"300\" alt=\"\" draggable=\"false\">\n    </picture>\n    <div class=\"step__check-mark\"></div>\n  </label>\n`)\n\nconst renderStepAnswers = (dataStep, numbers) => {\n  const {images, isRounded} = dataStep;\n  const answersMarkup = images.map((image, indexImage) => renderStepAnswer(image, indexImage, numbers, isRounded));\n\n  return (`\n    <fieldset class=\"step__list\">\n      ${answersMarkup.join('\\n')}\n    </fieldset>\n  `)\n}\n\nconst renderStep = (dataStep, numbers) => {\n  const {title} = dataStep;\n\n  return (`\n    <li class=\"level__step step step--hidden container\" data-class=\"step\">\n      <header class=\"step__header\">\n        <h2 class=\"step__title title title--step\">${title}</h2>\n      </header>\n        ${renderStepAnswers(dataStep, numbers)}\n    </li>\n  `)\n}\n\nconst renderStepsOfLevel = (levelIndex) => {\n  const stepsOfLevel = DATA.STEPS[levelIndex];\n  return stepsOfLevel.map((dataStep, number) => renderStep(dataStep, [levelIndex, number]));\n}\n\nconst steps = {\n  level: null, // get from level.js\n  rightAnswers: null, // get from level.js\n  givenRightAnswers: null, // get from level.js\n\n  getCurrentStep () {\n    this.steps = this.level.querySelectorAll('.step');\n    return this.steps[indexStep];\n  },\n\n  getDataOfAnswer(element) {\n    const stepItem = element.closest('.step__item');\n    const stepItemImageSrc = stepItem.querySelector('.step__image').src;\n    const stepTitleText = this.currentStep.querySelector('.step__title').textContent;\n    const answerData = {\n      image: stepItemImageSrc,\n      title: stepTitleText,\n    };\n\n    return answerData;\n  },\n\n  checkAnswer() {\n    this.givenAnswerOfStep = this.stepList.querySelector('input:checked');\n    const rightAnswerOfStep = this.rightAnswers[indexStep];\n    const givenAnswerOfStepValue = Number(this.givenAnswerOfStep.value);\n\n    if (rightAnswerOfStep === givenAnswerOfStepValue) {\n      const dataOfAnswer = this.getDataOfAnswer(this.givenAnswerOfStep);\n      this.givenRightAnswers.push(dataOfAnswer);\n    }\n  },\n\n  onStepListChange () {\n    buttonNext.classList.remove('button--hidden');\n  },\n\n  hideCurrentStep () {\n    addClassHidden(this.currentStep);\n    this.givenAnswerOfStep.checked = false;\n    buttonNext.classList.add('button--hidden');\n  },\n\n  showCurrentStep () {\n    this.currentStep = this.getCurrentStep();\n    this.stepList = this.currentStep.querySelector('.step__list');\n\n    removeClassHidden(this.currentStep);\n    this.stepList.addEventListener('change', () => this.onStepListChange(), {once: true});\n  },\n};\n\nconst onButtonNextClick = () => {\n  steps.checkAnswer();\n\n  if (indexStep === steps.steps.length - 1) {\n    hideOptions();\n    steps.hideCurrentStep();\n    showEndGame(steps.givenRightAnswers);\n    indexStep = 0;\n  } else {\n    steps.hideCurrentStep();\n    indexStep += 1;\n    steps.showCurrentStep();\n  }\n};\n\nconst onButtonBackClick = () => {\n  if (indexStep === 0) {\n    backToElections(steps.level);\n  } else {\n    steps.hideCurrentStep();\n    indexStep -= 1;\n    steps.showCurrentStep();\n  }\n};\n\nbuttonBack.addEventListener('click', () => onButtonBackClick());\nbuttonNext.addEventListener('click', () => onButtonNextClick());\n\nexport {steps, renderStepsOfLevel};\n"]}