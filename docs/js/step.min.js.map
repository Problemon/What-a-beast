{"version":3,"sources":["step.js"],"names":["DATA","showEndGame","backToElections","addClassHidden","removeClassHidden","buttonNext","document","querySelector","buttonBack","steps","givenNodeAnswer","currentStep","stepList","currentLevel","currentRightAnswers","givenRightAnswers","indexStep","renderStepAnswer","image","indexImage","numbers","isRounded","renderStepAnswers","dataStep","images","map","join","renderStep","title","renderStepsOfLevel","level","levelIndex","nodeSteps","LEVELS","number","insertAdjacentHTML","renderSteps","levels","forEach","onStepListChange","classList","remove","showCurrentStep","addEventListener","getCheckedAnswer","getDataOfAnswer","element","closest","src","textContent","clearStepListChange","removeEventListener","hideCurrentStep","checkedAnswer","checked","add","checkAnswer","Number","value","dataOfAnswer","push","onButtonNextClick","length","onButtonBackClick","setLogicOfSteps","rightAnswers","querySelectorAll"],"mappings":"OAASA,SAAY,uBACZC,gBAAmB,sBACnBC,oBAAuB,4BACvBC,eAAgBC,sBAAyB,gBAElD,MAAMC,WAAaC,SAASC,cAAc,0BACpCC,WAAaF,SAASC,cAAc,0BAE1C,IAAIE,MAEAC,gBACAC,YACAC,SACAC,aACAC,oBALAC,kBAAoB,GAOpBC,UAAY,EAEhB,MAAMC,iBAAmB,CAACC,EAAOC,EAAYC,EAASC,IAAc,sGAECF,EAAa,YAAYC,EAAQ,MAAMA,EAAQ,wDAElFF,wBAA4BA,iDAC9BG,EAAY,uBAAyB,sBAAsBH,4BAAgCA,0IAMrHI,kBAAoB,CAACC,EAAUH,KACnC,MAAMI,OAACA,EAAMH,UAAEA,GAAaE,EAG5B,MAAO,8CAFeC,EAAOC,KAAI,CAACP,EAAOC,IAAeF,iBAAiBC,EAAOC,EAAYC,EAASC,KAIjFK,KAAK,8BAKrBC,WAAa,CAACJ,EAAUH,KAC5B,MAAMQ,MAACA,GAASL,EAEhB,MAAO,wKAG2CK,oCAE1CN,kBAAkBC,EAAUH,qBAKhCS,mBAAqB,CAACC,EAAOC,KACjC,MAEMC,EAFmBhC,KAAKiC,OAAOF,GAEFN,KAAI,CAACF,EAAUW,IAC/BP,WAAWJ,EAAU,CAACQ,EAAYG,MAKrDJ,EAAMK,mBAAmB,YAAaH,EAAUN,KAAK,QAGjDU,YAAeC,IACnBA,EAAOC,SAAQ,CAACR,EAAOC,IAAeF,mBAAmBC,EAAOC,MAG5DQ,iBAAmB,KACvBlC,WAAWmC,UAAUC,OAAO,mBAGxBC,gBAAkB,KACtB/B,YAAcF,MAAMO,WACpBJ,SAAWD,YAAYJ,cAAc,eAErCH,kBAAkBO,aAClBC,SAAS+B,iBAAiB,SAAUJ,mBAGhCK,iBAAmB,IAAMhC,SAASL,cAAc,iBAEhDsC,gBAAmBC,IAIJ,CACjB5B,MAJe4B,EAAQC,QAAQ,eACCxC,cAAc,gBAAgByC,IAI9DpB,MAHoBjB,YAAYJ,cAAc,gBAAgB0C,cAS5DC,oBAAsB,KAC1BtC,SAASuC,oBAAoB,SAAUZ,mBAGnCa,gBAAkB,KACtB,MAAMC,EAAgBT,mBAEnBS,IACDA,EAAcC,SAAU,GAG1BjD,WAAWmC,UAAUe,IAAI,kBAVzB3C,SAASuC,oBAAoB,SAAUZ,kBAavCpC,eAAeQ,cAGX6C,YAAc,KAClB9C,gBAAkBkC,mBAIlB,GAH0B9B,oBAAoBE,aACfyC,OAAO/C,gBAAgBgD,OAEJ,CAChD,MAAMC,EA/BW,CACjBzC,MA8BqCR,gBAlCdqC,QAAQ,eACCxC,cAAc,gBAAgByC,IAI9DpB,MAHoBjB,YAAYJ,cAAc,gBAAgB0C,aAiC9DlC,kBAAkB6C,KAAKD,KAIrBE,kBAAoB,KACxBL,cAEIxC,YAAcP,MAAMqD,OAAS,GAC/BV,kBAEAnD,YAAYY,aAAcE,mBAE1BA,kBAAoB,GACpBC,UAAY,IAEZoC,kBACApC,WAAa,EACb0B,oBAIEqB,kBAAoB,KACN,IAAd/C,WACFd,gBAAgBW,cAEhBE,kBAAoB,KAEpBqC,kBACApC,WAAa,EACb0B,oBAIEsB,gBAAkB,CAAClC,EAAOmC,KAC9BpD,aAAeiB,EACfhB,oBAAsBmD,EACtBxD,MAAQqB,EAAMoC,iBAAiB,SAE/BxB,mBAGFlC,WAAWmC,iBAAiB,SAAS,KAnBjB,IAAd3B,WACFd,gBAAgBW,cAEhBE,kBAAoB,KAEpBqC,kBACApC,WAAa,EACb0B,sBAaJrC,WAAWsC,iBAAiB,SAAS,KArCnCa,mBAEIxC,YAAcP,MAAMqD,OAAS,GAC/BV,kBAEAnD,YAAYY,aAAcE,mBAE1BA,kBAAoB,GACpBC,UAAY,IAEZoC,kBACApC,WAAa,EACb0B,8BA2BIsB,gBAAiB5B","file":"step.min.js","sourcesContent":["import { DATA } from './data.min.js';\nimport { showEndGame } from './end.min.js';\nimport { backToElections } from './elections.min.js';\nimport { addClassHidden, removeClassHidden } from './util.min.js';\n\nconst buttonNext = document.querySelector('.options__button--next');\nconst buttonBack = document.querySelector('.options__button--back');\n\nlet steps;\nlet givenRightAnswers = [];\nlet givenNodeAnswer;\nlet currentStep;\nlet stepList;\nlet currentLevel;\nlet currentRightAnswers;\n\nlet indexStep = 0;\n\nconst renderStepAnswer = (image, indexImage, numbers, isRounded) => (`\n  <label class=\"step__item\">\n    <input class=\"step__radio visually-hidden\" type=\"radio\" value=\"${indexImage + 1}\" name=\"${numbers[0]}-${numbers[1]}\">\n    <picture>\n      <source srcset=\"img/items/${image}.webp 1x, img/items/${image}@2x.webp 2x\">\n      <img class=\"step__image ${isRounded ? 'step__image--rounded' : ''}\" src=\"img/items/${image}.png\" srcset=\"img/items/${image}@2x.png 2x\" width=\"300\" height=\"300\" alt=\"\" draggable=\"false\">\n    </picture>\n    <div class=\"step__check-mark\"></div>\n  </label>\n`);\n\nconst renderStepAnswers = (dataStep, numbers) => {\n  const {images, isRounded} = dataStep;\n  const answersMarkup = images.map((image, indexImage) => renderStepAnswer(image, indexImage, numbers, isRounded));\n\n  return (`\n    <fieldset class=\"step__list\">\n      ${answersMarkup.join('\\n')}\n    </fieldset>\n  `);\n};\n\nconst renderStep = (dataStep, numbers) => {\n  const {title} = dataStep;\n\n  return (`\n    <li class=\"level__step step step--hidden container\" data-class=\"step\">\n      <header class=\"step__header\">\n        <h2 class=\"step__title title title--step\">${title}</h2>\n      </header>\n        ${renderStepAnswers(dataStep, numbers)}\n    </li>\n  `);\n};\n\nconst renderStepsOfLevel = (level, levelIndex) => {\n  const dataStepsOfLevel = DATA.LEVELS[levelIndex];\n\n  const nodeSteps = dataStepsOfLevel.map((dataStep, number) => {\n    const nodeStep = renderStep(dataStep, [levelIndex, number]);\n\n    return nodeStep;\n  });\n\n  level.insertAdjacentHTML('beforeend', nodeSteps.join('\\n'));\n};\n\nconst renderSteps = (levels) => {\n  levels.forEach((level, levelIndex) => renderStepsOfLevel(level, levelIndex));\n};\n\nconst onStepListChange = () => {\n  buttonNext.classList.remove('button--hidden');\n};\n\nconst showCurrentStep = () => {\n  currentStep = steps[indexStep];\n  stepList = currentStep.querySelector('.step__list');\n\n  removeClassHidden(currentStep);\n  stepList.addEventListener('change', onStepListChange);\n};\n\nconst getCheckedAnswer = () => stepList.querySelector('input:checked');\n\nconst getDataOfAnswer = (element) => {\n  const stepItem = element.closest('.step__item');\n  const stepItemImageSrc = stepItem.querySelector('.step__image').src;\n  const stepTitleText = currentStep.querySelector('.step__title').textContent;\n  const answerData = {\n    image: stepItemImageSrc,\n    title: stepTitleText,\n  };\n\n  return answerData;\n};\n\nconst clearStepListChange = () => {\n  stepList.removeEventListener('change', onStepListChange);\n};\n\nconst hideCurrentStep = () => {\n  const checkedAnswer = getCheckedAnswer();\n\n  if(checkedAnswer) {\n    checkedAnswer.checked = false;\n  }\n\n  buttonNext.classList.add('button--hidden');\n\n  clearStepListChange();\n  addClassHidden(currentStep);\n};\n\nconst checkAnswer = () => {\n  givenNodeAnswer = getCheckedAnswer();\n  const rightAnswerOfStep = currentRightAnswers[indexStep];\n  const givenAnswerOfStepValue = Number(givenNodeAnswer.value);\n\n  if (rightAnswerOfStep === givenAnswerOfStepValue) {\n    const dataOfAnswer = getDataOfAnswer(givenNodeAnswer);\n    givenRightAnswers.push(dataOfAnswer);\n  }\n};\n\nconst onButtonNextClick = () => {\n  checkAnswer();\n\n  if (indexStep === steps.length - 1) {\n    hideCurrentStep();\n\n    showEndGame(currentLevel, givenRightAnswers);\n\n    givenRightAnswers = [];\n    indexStep = 0;\n  } else {\n    hideCurrentStep();\n    indexStep += 1;\n    showCurrentStep();\n  }\n};\n\nconst onButtonBackClick = () => {\n  if (indexStep === 0) {\n    backToElections(currentLevel);\n\n    givenRightAnswers = [];\n  } else {\n    hideCurrentStep();\n    indexStep -= 1;\n    showCurrentStep();\n  }\n};\n\nconst setLogicOfSteps = (level, rightAnswers) => {\n  currentLevel = level;\n  currentRightAnswers = rightAnswers;\n  steps = level.querySelectorAll('.step');\n\n  showCurrentStep();\n};\n\nbuttonBack.addEventListener('click', () => onButtonBackClick());\nbuttonNext.addEventListener('click', () => onButtonNextClick());\n\nexport {setLogicOfSteps, renderSteps};\n"]}