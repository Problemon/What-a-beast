import{removeClassHidden,addClassHidden}from"./util.min.js";import{launchGame}from"./game.min.js";import{hideLevel}from"./level.min.js";const splashScreen=document.querySelector(".splash-screen"),gameEnd=document.querySelector(".end"),buttonAgain=gameEnd.querySelector(".button--again"),numberRightAnswers=gameEnd.querySelector(".end__right-answers"),answersList=gameEnd.querySelector(".end__answer-list"),glider=new Glider(answersList,{slidesToShow:3,slidesToScroll:1,draggable:!1,arrows:{prev:".glider-prev",next:".glider-next"}}),gliderInner=document.querySelector(".glider-track"),hideEndGame=()=>{addClassHidden(gameEnd)},onButtonAgain=()=>{addClassHidden(gameEnd),launchGame(),gliderInner.innerHTML=""},templateAnswerItem=(e,n)=>`\n    <li class="end__answer-item">\n      <img class="end__answer-image" src="${e}" alt="">\n      <h3 class="end__answer-title">${n}</h3>\n    </li>\n`,createRightAnswersList=e=>{const n=e.map((e=>{const{image:n,title:s}=e;return templateAnswerItem(n,s)}));gliderInner.insertAdjacentHTML("beforeend",n.join("\n"))},showEndGameAnimation=()=>{removeClassHidden(splashScreen),setTimeout((()=>{addClassHidden(splashScreen),removeClassHidden(gameEnd)}),3e3)},showEndGame=(e,n)=>{numberRightAnswers.innerHTML=`${n.length}&nbsp;`,buttonAgain.addEventListener("click",onButtonAgain,{once:!0}),hideLevel(e),createRightAnswersList(n),glider.refresh(!0),removeClassHidden(splashScreen),setTimeout((()=>{addClassHidden(splashScreen),removeClassHidden(gameEnd)}),3e3)};export{showEndGame};
//# sourceMappingURL=end.min.js.map
