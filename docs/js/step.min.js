import{DATA}from"./data.min.js";import{showEndGame}from"./end.min.js";import{backToElections}from"./elections.min.js";import{addClassHidden,removeClassHidden}from"./util.min.js";const buttonNext=document.querySelector(".options__button--next"),buttonBack=document.querySelector(".options__button--back");let steps,givenNodeAnswer,currentStep,stepList,currentLevel,currentRightAnswers,givenRightAnswers=[],indexStep=Number(localStorage.getItem("indexStep"));indexStep||(indexStep=0);const renderStepAnswer=(e,t,n,s)=>`\n  <label class="step__item">\n    <input class="step__radio visually-hidden" type="radio" value="${t+1}" name="${n[0]}-${n[1]}">\n    <picture>\n      <source srcset="img/items/${e}.webp 1x, img/items/${e}@2x.webp 2x">\n      <img class="step__image ${s?"step__image--rounded":""}" src="img/items/${e}.png" srcset="img/items/${e}@2x.png 2x" width="300" height="300" alt="" draggable="false">\n    </picture>\n    <div class="step__check-mark"></div>\n  </label>\n`,renderStepAnswers=(e,t)=>{const{images:n,isRounded:s}=e;return`\n    <fieldset class="step__list">\n      ${n.map(((e,n)=>renderStepAnswer(e,n,t,s))).join("\n")}\n    </fieldset>\n  `},renderStep=(e,t)=>{const{title:n}=e;return`\n    <li class="level__step step step--hidden container" data-class="step">\n      <header class="step__header">\n        <h2 class="step__title title title--step">${n}</h2>\n      </header>\n        ${renderStepAnswers(e,t)}\n    </li>\n  `},renderStepsOfLevel=(e,t)=>{const n=DATA.LEVELS[t].map(((e,n)=>renderStep(e,[t,n])));e.insertAdjacentHTML("beforeend",n.join("\n"))},renderSteps=e=>{e.forEach(((e,t)=>renderStepsOfLevel(e,t)))},onStepListChange=()=>{buttonNext.classList.remove("button--hidden")},showCurrentStep=()=>{currentStep=steps[indexStep],stepList=currentStep.querySelector(".step__list"),removeClassHidden(currentStep),stepList.addEventListener("change",onStepListChange)},getCheckedAnswer=()=>stepList.querySelector("input:checked"),getDataOfAnswer=e=>({image:e.closest(".step__item").querySelector(".step__image").src}),clearStepListChange=()=>{stepList.removeEventListener("change",onStepListChange)},hideCurrentStep=()=>{const e=getCheckedAnswer();e&&(e.checked=!1),buttonNext.classList.add("button--hidden"),stepList.removeEventListener("change",onStepListChange),addClassHidden(currentStep)},checkAnswer=()=>{givenNodeAnswer=getCheckedAnswer();if(currentRightAnswers[indexStep]===Number(givenNodeAnswer.value)){const e={image:givenNodeAnswer.closest(".step__item").querySelector(".step__image").src};givenRightAnswers.push(e),localStorage.setItem("givenRightAnswers",JSON.stringify(givenRightAnswers))}},onButtonNextClick=()=>{checkAnswer(),indexStep===steps.length-1?(hideCurrentStep(),showEndGame(currentLevel,givenRightAnswers,currentRightAnswers),givenRightAnswers=[],indexStep=0,localStorage.removeItem("indexStep")):(hideCurrentStep(),indexStep+=1,localStorage.setItem("indexStep",indexStep),showCurrentStep())},onButtonBackClick=()=>{0===indexStep?(backToElections(currentLevel),givenRightAnswers=[],localStorage.removeItem("givenRightAnswers"),localStorage.removeItem("indexStep"),localStorage.removeItem("indexLevel")):(hideCurrentStep(),indexStep-=1,localStorage.setItem("indexStep",indexStep),showCurrentStep())},checkStorageRignAnswers=()=>{const e=JSON.parse(localStorage.getItem("givenRightAnswers"));e&&(givenRightAnswers=e)},setLogicOfSteps=(e,t)=>{localStorage.setItem("rightAnswers",JSON.stringify(t)),currentLevel=e,currentRightAnswers=t,checkStorageRignAnswers(),steps=e.querySelectorAll(".step"),showCurrentStep()};buttonBack.addEventListener("click",(()=>{0===indexStep?(backToElections(currentLevel),givenRightAnswers=[],localStorage.removeItem("givenRightAnswers"),localStorage.removeItem("indexStep"),localStorage.removeItem("indexLevel")):(hideCurrentStep(),indexStep-=1,localStorage.setItem("indexStep",indexStep),showCurrentStep())})),buttonNext.addEventListener("click",(()=>(checkAnswer(),void(indexStep===steps.length-1?(hideCurrentStep(),showEndGame(currentLevel,givenRightAnswers,currentRightAnswers),givenRightAnswers=[],indexStep=0,localStorage.removeItem("indexStep")):(hideCurrentStep(),indexStep+=1,localStorage.setItem("indexStep",indexStep),showCurrentStep())))));export{setLogicOfSteps,renderSteps};
//# sourceMappingURL=step.min.js.map
