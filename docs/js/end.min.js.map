{"version":3,"sources":["end.js"],"names":["removeClassHidden","addClassHidden","launchGame","hideLevel","splashScreen","document","querySelector","gameEnd","buttonAgain","numberRightAnswers","answersList","glider","Glider","slidesToShow","slidesToScroll","draggable","arrows","prev","next","gliderInner","hideEndGame","onButtonAgain","innerHTML","templateAnswerItem","img","title","createRightAnswersList","dataOfAnswers","answersItems","map","item","image","insertAdjacentHTML","join","showEndGameAnimation","setTimeout","showEndGame","level","givenRightAnswers","length","addEventListener","once","refresh"],"mappings":"OAASA,kBAAmBC,mBAAsB,uBACzCC,eAAkB,uBAClBC,cAAiB,iBAE1B,MAAMC,aAAeC,SAASC,cAAc,kBACtCC,QAAUF,SAASC,cAAc,QACjCE,YAAcD,QAAQD,cAAc,kBACpCG,mBAAqBF,QAAQD,cAAc,uBAC3CI,YAAcH,QAAQD,cAAc,qBAEpCK,OAAS,IAAIC,OAAQF,YAAa,CACtCG,aAAc,EACdC,eAAgB,EAChBC,WAAW,EACXC,OAAQ,CACNC,KAAM,eACNC,KAAM,kBAIJC,YAAcd,SAASC,cAAc,iBAGrCc,YAAc,KAClBnB,eAAeM,UAGXc,cAAgB,KAHpBpB,eAAeM,SAKfL,aACAiB,YAAYG,UAAY,IAGpBC,mBAAqB,CAACC,EAAKC,IAAU,kFAECD,mDACNC,sBAIhCC,uBAA0BC,IAC9B,MAAMC,EAAeD,EAAcE,KAAKC,IACtC,MAAMC,MAACA,EAAKN,MAAEA,GAASK,EACvB,OAAOP,mBAAmBQ,EAAON,MAGnCN,YAAYa,mBAAmB,YAAaJ,EAAaK,KAAK,QAG1DC,qBAAuB,KAC3BlC,kBAAkBI,cAElB+B,YAAW,KACTlC,eAAeG,cACfJ,kBAAkBO,WACjB,MAGC6B,YAAc,CAACC,EAAOC,KAC1B7B,mBAAmBa,UAAY,GAAGgB,EAAkBC,eACpD/B,YAAYgC,iBAAiB,QAASnB,cAAe,CAACoB,MAAM,IAE5DtC,UAAUkC,GAEVX,uBAAuBY,GACvB3B,OAAO+B,SAAQ,GAff1C,kBAAkBI,cAElB+B,YAAW,KACTlC,eAAeG,cACfJ,kBAAkBO,WACjB,aAeI6B","file":"end.min.js","sourcesContent":["import { removeClassHidden, addClassHidden } from './util.min.js';\nimport { launchGame } from './game.min.js';\nimport { hideLevel } from './level.min.js';\n\nconst splashScreen = document.querySelector('.splash-screen');\nconst gameEnd = document.querySelector('.end');\nconst buttonAgain = gameEnd.querySelector('.button--again');\nconst numberRightAnswers = gameEnd.querySelector('.end__right-answers');\nconst answersList = gameEnd.querySelector('.end__answer-list');\n\nconst glider = new Glider (answersList, {\n  slidesToShow: 3,\n  slidesToScroll: 1,\n  draggable: false,\n  arrows: {\n    prev: '.glider-prev',\n    next: '.glider-next',\n  },\n});\n\nconst gliderInner = document.querySelector('.glider-track');\n\n\nconst hideEndGame = () => {\n  addClassHidden(gameEnd);\n};\n\nconst onButtonAgain = () => {\n  hideEndGame();\n  launchGame();\n  gliderInner.innerHTML = '';\n};\n\nconst templateAnswerItem = (img, title) => (`\n    <li class=\"end__answer-item\">\n      <img class=\"end__answer-image\" src=\"${img}\" alt=\"\">\n      <h3 class=\"end__answer-title\">${title}</h3>\n    </li>\n`);\n\nconst createRightAnswersList = (dataOfAnswers) => {\n  const answersItems = dataOfAnswers.map((item) => {\n    const {image, title} = item;\n    return templateAnswerItem(image, title);\n  });\n\n  gliderInner.insertAdjacentHTML('beforeend', answersItems.join('\\n'));\n};\n\nconst showEndGameAnimation = () => {\n  removeClassHidden(splashScreen);\n\n  setTimeout(() => {\n    addClassHidden(splashScreen);\n    removeClassHidden(gameEnd);\n  }, 3000);\n};\n\nconst showEndGame = (level, givenRightAnswers) => {\n  numberRightAnswers.innerHTML = `${givenRightAnswers.length}&nbsp;`;\n  buttonAgain.addEventListener('click', onButtonAgain, {once: true});\n\n  hideLevel(level);\n\n  createRightAnswersList(givenRightAnswers);\n  glider.refresh(true);\n\n  showEndGameAnimation();\n};\n\nexport { showEndGame };\n\n\n"]}